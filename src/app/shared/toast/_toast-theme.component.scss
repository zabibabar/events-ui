@use 'sass:map';
@use '@angular/material' as mat;

@mixin color($theme) {
  $color-config: mat.get-color-config($theme);
  $is-dark: map.get($color-config, 'is-dark');
  $primary-palette: map.get($color-config, 'primary');
  $warn-palette: map.get($color-config, 'warn');
  $foreground-palette: map.get($color-config, 'foreground');
  $background-palette: map.get($color-config, 'background');
  $green-palette: mat.define-palette(mat.$green-palette);
  $light-green-palette: mat.define-palette(mat.$light-green-palette);

  .toast {
    background-color: mat.get-color-from-palette($background-palette, card);

    &__flash--error {
      background-color: mat.get-color-from-palette($warn-palette, default);
    }

    &__flash--success {
      @if $is-dark {
        background-color: mat.get-color-from-palette($light-green-palette, 500);
      } @else {
        background-color: mat.get-color-from-palette($green-palette, 500);
      }
    }

    &__icon--error {
      color: mat.get-color-from-palette($warn-palette, default);
    }

    &__icon--success {
      @if $is-dark {
        color: mat.get-color-from-palette($light-green-palette, 500);
      } @else {
        color: mat.get-color-from-palette($green-palette, 500);
      }
    }

    &__close-button__icon {
      color: mat.get-color-from-palette($foreground-palette, secondary-text);
    }
  }
}

@mixin typography($typography-config) {
}

@mixin theme($theme, $typography-config) {
  $color-config: mat.get-color-config($theme);
  @if $color-config != null {
    @include color($theme);
  }

  @if $typography-config != null {
    @include typography($typography-config);
  }
}
